---
- name: Clair | Templates list
  set_fact:
    clair_templates:
      - { name: clair-svc, file: clair-svc.yml, type: svc }
      - { name: clair-rs, file: clair-rs.yml, type: rs }
      - { name: clair-db-svc, file: clair-db-svc.yml, type: svc }
      - { name: clair-db-rs, file: clair-db-rs.yml, type: rs }
      - { name: clair-config-cm, file: clair-config-cm.yml, type: cm }

- name: Clair | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/registry-operator/{{ item.file }}"
  with_items: "{{ clair_templates }}"
  register: clair_manifests
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Clair | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ registry_operator_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ kube_config_dir }}/addons/registry-operator/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ clair_manifests.results }}"
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Clair | Create PVC manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/registry-operator/{{ item.file }}"
  with_items:
    - { name: clair-db-pvc, file: clair-db-pvc.yml, type: pvc }
  register: clair_manifests
  when:
    - inventory_hostname == groups['kube_control_plane'][0]

- name: Clair | Apply PVC manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ registry_operator_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ kube_config_dir }}/addons/registry-operator/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ clair_manifests.results }}"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
