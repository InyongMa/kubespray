---
- name: Registry Operator | CRD Templates list
  set_fact:
    registry_operator_crd_templates:
      - { name: tmax.io_externalregistries, file: tmax.io_externalregistries.yml, type: crd }
      - { name: tmax.io_imagereplicates, file: tmax.io_imagereplicates.yml, type: crd }
      - { name: tmax.io_imagescanrequests, file: tmax.io_imagescanrequests.yml, type: crd }
      - { name: tmax.io_imagesigners, file: tmax.io_imagesigners.yml, type: crd }
      - { name: tmax.io_imagesignrequests, file: tmax.io_imagesignrequests.yml, type: crd }
      - { name: tmax.io_notaries, file: tmax.io_notaries.yml, type: crd }
      - { name: tmax.io_registries, file: tmax.io_registries.yml, type: crd }
      - { name: tmax.io_registrycronjobs, file: tmax.io_registrycronjobs.yml, type: crd }
      - { name: tmax.io_registryjobs, file: tmax.io_registryjobs.yml, type: crd }
      - { name: tmax.io_repositories, file: tmax.io_repositories.yml, type: crd }
      - { name: tmax.io_signerkeys, file: tmax.io_signerkeys.yml, type: crd }

- name: Registry Operator | Create CRD manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/registry-operator/{{ item.file }}"
  with_items: "{{ registry_operator_crd_templates }}"
  register: registry_operator_crd_manifests
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: Registry Operator | Apply CRD manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ registry_operator_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ kube_config_dir }}/addons/registry-operator/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ registry_operator_crd_manifests.results }}"
  when: inventory_hostname == groups['kube_control_plane'][0]
