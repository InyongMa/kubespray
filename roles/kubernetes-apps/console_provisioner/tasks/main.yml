---
- name: CONSOLE env | Get proxy address from kube API
  include_tasks: "proxy.yml"

- name: CONSOLE Provisioner | Generate Manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/{{ item.file }}"
  with_items:
    - { name: 1.crd, file: 1.crd.yml }
    - { name: 2.init, file: 2.init.yml }
    - { name: 3.job, file: 3.job.yml }
    - { name: 4.svc-lb, file: 4.svc-lb.yml }
    - { name: 5.deploy, file: 5.deploy.yml }
  register: console_manifests
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: CONSOLE Provisioner | Apply Manifests
  kube:
    kubectl: "{{ bin_dir }}/kubectl"
    filename: "{{ kube_config_dir }}/{{ item.item.file }}"
    state: "latest"
    wait: true
  with_items:
    - "{{ console_manifests.results }}"
  when:
    - inventory_hostname == groups['kube_control_plane'][0]
  loop_control:
    label: "{{ item.item.file }}"
