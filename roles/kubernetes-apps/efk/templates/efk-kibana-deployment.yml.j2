apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: {{ efk_namespace }}
  labels:
    app: kibana
  annotations:
    traefik.ingress.kubernetes.io/service.serverstransport: tmaxcloud@file
spec:
  type: {{ efk_kibana_service_type }}
  ports:
  - port: 443
    name: https
    targetPort: 3000
  selector:
    app: kibana

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ efk_namespace }}
  labels:
    app: kibana
spec:
  replicas: {{ efk_kibana_replicas }}
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      serviceAccount: efk-service-account
      containers:
      - name: gatekeeper
        image: {{ efk_gatekeeper_image_repo }}:{{ efk_gatekeeper_image_tag }}
        imagePullPolicy: Always
        args:
        - --client-id={{ efk_kibana_client_id }}
        - --client-secret={{ kibana_client_secret.stdout }}
        - --listen=:3000
        - --upstream-url=http://127.0.0.1:5601
        - --discovery-url=https://{{ efk_hyperauth_url }}/auth/realms/{{ efk_hyperauth_realm }}
        - --secure-cookie=false
        - --tls-cert=/etc/secrets/tls.crt
        - --tls-private-key=/etc/secrets/tls.key
        - --tls-ca-certificate=/etc/secrets/ca.crt
        - --skip-openid-provider-tls-verify=true
        - --enable-self-signed-tls=false
        - --skip-upstream-tls-verify=true
        - --upstream-keepalives=false
        - --enable-default-deny=true
        - --enable-refresh-tokens=true
        - --enable-metrics=true
        - --encryption-key={{ efk_kibana_encryption_key }}
        - --resources=uri=/*|roles=kibana:kibana-manager
        - --verbose
        ports:
        - containerPort: 3000
          name: service
        volumeMounts:
        - name: secret
          mountPath: "/etc/secrets"
          readOnly: true
      - name: kibana
        image: {{ efk_kibana_image_repo }}:{{ efk_kibana_image_tag }}
        resources:
          limits:
            cpu: 300m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        env:
          - name: ELASTICSEARCH_URL
            value: http://{{ efk_es_svc_name }}.{{ efk_namespace }}.svc.cluster.local:9200
        ports:
        - containerPort: 5601
        volumeMounts:
        - mountPath: /usr/share/kibana/config/kibana.yml
          name: config
          subPath: kibana.yml
      volumes:
      - name: secret
        secret:
          secretName: kibana-secret
      - name: config
        configMap:
          name: kibana-config

---

apiVersion: v1
data:
  kibana.yml: |
    server.name: kibana
    server.host: "0"
    elasticsearch.hosts: [ "http://{{ efk_es_svc_name }}:9200" ]
    elasticsearch.requestTimeout: "100000ms"
kind: ConfigMap
metadata:
  name: kibana-config
  namespace: {{ efk_namespace }}
