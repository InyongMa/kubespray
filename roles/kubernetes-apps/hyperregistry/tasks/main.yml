---
- name: HyperRegistry | Create addon dir
  file:
    path: "{{ kube_config_dir }}/addons/hyperregistry"
    state: directory
    owner: root
    group: root
    mode: 0755
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Get ingress IP
  include_tasks: "ingress_ip.yml"
  when: hyperregistry_ingress_nginx_ip | length == 0

- name: HyperRegistry | Templates list
  set_fact:
    hyperregistry_templates:
      - { name: 00-namespace, file: 00-namespace.yml, type: ns }

- name: HyperRegistry | Create manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kube_config_dir }}/addons/hyperregistry/{{ item.file }}"
  with_items: "{{ hyperregistry_templates }}"
  register: hyperregistry_manifests
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Apply manifests
  kube:
    name: "{{ item.item.name }}"
    namespace: "{{ hyperregistry_namespace }}"
    kubectl: "{{ bin_dir }}/kubectl"
    resource: "{{ item.item.type }}"
    filename: "{{ kube_config_dir }}/addons/hyperregistry/{{ item.item.file }}"
    state: "latest"
  with_items: "{{ hyperregistry_manifests.results }}"
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Create values.yml
  template:
    src: "{{ item }}.j2"
    dest: "{{ kube_config_dir }}/addons/hyperregistry/{{ item }}"
  with_items: ["values.yml"]
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Create chart download dir
  file:
    path: "/tmp/kubespray/hyperregistry"
    state: directory
    mode: 0755
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Download chart
  get_url:
#    url: "https://tmax-cloud.github.io/HyperRegistry-Chart/hyperregistry-v2.2.2.tgz"
    url: "{{ files_repo }}/hyperregistry-v2.2.2.tgz"
    dest: "/tmp/kubespray/hyperregistry/hyperregistry.tar.gz"
    mode: "0644"
    checksum: "sha256:63da491dcdc77d7231fc1d8e280e2453127451e177727146e722627cc711fdde"
  register: get_chart_result
  until: "'OK' in get_chart_result.msg or 'file already exists' in get_chart_result.msg"
  retries: 4
  delay: "{{ retry_stagger | default(5) }}"
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Unpacking chart archive
  unarchive:
    src: "/tmp/kubespray/hyperregistry/hyperregistry.tar.gz"
    dest: "/tmp/kubespray/hyperregistry/"
    copy: no
  when: inventory_hostname == groups['kube_control_plane'][0]

- name: HyperRegistry | Install HyperRegistry Chart
  shell: |
    /usr/local/bin/helm install hyperregistry /tmp/kubespray/hyperregistry -n hyperregistry -f {{ kube_config_dir }}/addons/hyperregistry/values.yml
  when: inventory_hostname == groups['kube_control_plane'][0]

